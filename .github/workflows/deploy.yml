name: CI/CD Octobets

on:
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout del código
      - uses: actions/checkout@v4

      # 2. JDK 21 para Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # 3-bis. Localizar el JAR generado y exponerlo
      - name: Find JAR
        id: find_jar
        run: |
          JAR=$(find . -type f -name '*.jar' -path '*/target/*' | head -n1)
          if [ -z "$JAR" ]; then
            echo "No JAR found!"; exit 1
          fi
          echo "jar=$JAR" >> $GITHUB_OUTPUT

      # 4. Copiar sólo ese JAR + compose
      - name: Upload JAR and Docker Compose
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            ${{ steps.find_jar.outputs.jar }}
            docker-compose.yml
          target: /opt/octobets

      # 5. Desplegar por SSH
      - name: Remote deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/octobets
            mkdir -p backend
            mv target/*.jar backend/app.jar || mv *.jar backend/app.jar
            docker compose up -d --build
            docker image prune -f
            sudo systemctl reload nginx || true
