name: CI/CD Octobets

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build JAR
    runs-on: ubuntu-latest
    outputs:
      jar-path: ${{ steps.find-jar.outputs.jar }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Build with Maven
        run: mvn -B package -DskipTests

      - name: Find JAR
        id: find-jar
        run: |
          echo "jar=$(ls target/*.jar | head -n1)" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to VPS
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Upload JAR and config via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            ${{ needs.build.outputs.jar-path }}
            docker-compose.yml
          target: /opt/octobets

      - name: Remote deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/octobets
            # Asegúrate de que exista la carpeta backend
            mkdir -p backend
            # Mueve y renombra el JAR al lugar esperado
            mv *.jar backend/app.jar
            # Lanza o reconstruye los contenedores
            docker compose up -d --build
            # Limpia imágenes huérfanas
            docker image prune -f
            # Recarga Nginx si lo usas como proxy
            sudo systemctl reload nginx || true
